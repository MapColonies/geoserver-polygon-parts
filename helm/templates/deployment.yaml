{{- $fs := (include "common.fs.merged" .) | fromYaml }}
{{- $cloudProviderImagePullSecretName := include "geoserver.cloudProviderImagePullSecretName" . -}}
{{- $deploymentName := include "deployment.fullname" . }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  labels:
{{ include "geoserver.labels" . | indent 4 }}
  {{- with .Values.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
{{ include "geoserver.selectorLabels" . | indent 6}}
  template:
    metadata:
      labels:
{{ include "geoserver.labels" . | indent 8}}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- (tpl . $) | indent 8 }}
        {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
      - name: {{ template "geoserver.fullname" . }}
        image: {{ include "geoserver.image" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.resources.enabled }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        {{- end }}
        env:
          {{- if $fs.internalPvc.mountPath }}
          - name: GEOSERVER_DATA_DIR
            value: {{ $fs.internalPvc.mountPath | quote }}
          {{- end }}
          - name: GEOSERVER_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "secret.fullname" . }}
                key: GEOSERVER_USER
          - name: GEOSERVER_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "secret.fullname" . }}
                key: GEOSERVER_PASS
          {{- if .Values.pgSslAuth.enabled }}
          - name: POSTGRES_ENABLE_SSL_AUTH
            value: 'true'
          - name: POSTGRES_CERTS_MOUNT_PATH
            value: {{ .Values.pgSslAuth.mountPath }}
          {{- end }}
          {{- if .Values.rootCerts.enabled }}
          - name: ADD_ROOT_CERTS
            value: 'true'
          - name: ROOT_CERTS_PATH
            value: {{ .Values.rootCerts.mountPath }}
          {{- else }}
          - name: ADD_ROOT_CERTS
            value: 'false'
          {{- end }}
          {{- with .Values.extraGeoserverEnv }}
          {{- tpl . $ | nindent 10 }}
          {{- end }}
        ports:
          - name: http-geoserver
            containerPort: 8080
        startupProbe:
          httpGet:
            path: /geoserver
            port: http-geoserver
          failureThreshold: 30
          periodSeconds: 10
          initialDelaySeconds: 60
        livenessProbe:
          httpGet:
            path: /geoserver
            port: http-geoserver
            scheme: HTTP
          failureThreshold: 3
          successThreshold: 1
          periodSeconds: 10
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: {{ .Values.readiness.path }}
            port: http-geoserver
            scheme: HTTP
          failureThreshold: 3
          successThreshold: 1
          timeoutSeconds: 5
          periodSeconds: 10
          initialDelaySeconds: 90
        volumeMounts:
        - name: data-dir-volume
          mountPath: {{ $fs.internalPvc.mountPath}}
          subPath: {{ $fs.internalPvc.geoserverDataDirSubPath}}
        {{- if .Values.pgSslAuth.enabled }}
        - name: cert-conf
          mountPath: {{ .Values.pgSslAuth.mountPath }}
        {{- end }}
        {{- if .Values.rootCerts.enabled }}
        - name: root-cert-conf
          mountPath: {{ .Values.rootCerts.mountPath }}
        {{- end }}
      - name: {{ template "geoserver.fullname" . }}-init
        image: {{ include "geoserver.sidecarImage" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources: {{- toYaml .Values.sidecarResources | nindent 10 }}
        env:
          {{- with .Values.extraSidecarEnv }}
          {{- tpl . $ | nindent 10 }}
          {{- end }}
        envFrom:
          - secretRef:
              name: {{ template "secret.fullname" . }}
          - configMapRef:
              name: {{ template "configmap.fullname" . }}
      volumes:
      - name: data-dir-volume
        persistentVolumeClaim:
            claimName: {{ $fs.internalPvc.name }}
      {{- if .Values.pgSslAuth.enabled }}
      - name: cert-conf
        secret:
          secretName: {{ .Values.pgSslAuth.secretName }}
      {{- end }}
      {{- if .Values.rootCerts.enabled }}
      - name: root-cert-conf
        secret:
          secretName: {{ .Values.rootCerts.secretName }}
      {{- end }}
